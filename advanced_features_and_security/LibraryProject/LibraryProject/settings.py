"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*y%0=ze+t!kr7_glj303cin1$*^vbn20_+8-$h#y0l)4^nt)jy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf',
    'relationship_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = "bookshelf.CustomUser"


# SECURITY SETTINGS (add / update these in LibraryProject/settings.py)

# --- General ---
# In production, set DEBUG = False. For development set True.
DEBUG = False    # <-- set to False for production

# Make sure to configure ALLOWED_HOSTS in production
ALLOWED_HOSTS = ["yourdomain.com", "www.yourdomain.com", "127.0.0.1"]

# --- Cookie & Transport security ---
# Ensure cookies are sent over HTTPS only in production
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Prevent JavaScript from reading the CSRF cookie in some cases
CSRF_COOKIE_HTTPONLY = False  # usually False because Django's csrftoken is read by JS for AJAX; keep False unless you handle differently

# --- Browser protections ---
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = "DENY"  # or 'SAMEORIGIN' if you need frames from same origin

# --- HSTS (only enable in production with HTTPS) ---
SECURE_HSTS_SECONDS = 31536000  # 1 year - enable only after ensuring HTTPS
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# --- Content Security Policy (CSP) ---
# Option A: use django-csp (recommended)
# Install: pip install django-csp
# Then add 'csp' to INSTALLED_APPS and 'csp.middleware.CSPMiddleware' to MIDDLEWARE (see below)

# Option B (manual header) - example default
CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = ("'self'",)  # adjust for allowed CDNs
CSP_STYLE_SRC = ("'self'",)   # adjust for allowed CDNs

# --- MIDDLEWARE (ensure order) ---
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    # If using django-csp, include its middleware here:
    # "csp.middleware.CSPMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    # ... other middleware ...
]
# example django-csp config
CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = ("'self'", "https://cdnjs.cloudflare.com")
CSP_STYLE_SRC = ("'self'", "https://cdnjs.cloudflare.com")
CSP_IMG_SRC = ("'self'", "data:")

# --- Media for profile photos (already needed) ---
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"
# ---------------------------
# 🔐 HTTPS & SSL Security
# ---------------------------

# Redirect all HTTP to HTTPS
SECURE_SSL_REDIRECT = True  

# HTTP Strict Transport Security (HSTS)
SECURE_HSTS_SECONDS = 31536000  # 1 year in seconds
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# Cookies transmitted only over HTTPS
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Additional security headers
X_FRAME_OPTIONS = "DENY"  # prevent clickjacking
SECURE_CONTENT_TYPE_NOSNIFF = True  # block MIME-type sniffing
SECURE_BROWSER_XSS_FILTER = True    # enable XSS filter in browsers

# Security Configurations for LibraryProject

#1. Enforced HTTPS with `SECURE_SSL_REDIRECT = True`.
#2. Configured HSTS (`SECURE_HSTS_SECONDS`, `SECURE_HSTS_INCLUDE_SUBDOMAINS`, `SECURE_HSTS_PRELOAD`).
#3. Enforced secure cookies (`SESSION_COOKIE_SECURE`, `CSRF_COOKIE_SECURE`).
#4. Added security headers (`X_FRAME_OPTIONS`, `SECURE_CONTENT_TYPE_NOSNIFF`, `SECURE_BROWSER_XSS_FILTER`).
#5. Configured deployment server (Nginx/Apache) to handle SSL/TLS using Let’s Encrypt certificates.
